{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-a12695eeb138efcc.js","src/animation.js","node_modules/@studio-freight/lenis/dist/lenis.mjs","node_modules/@studio-freight/lenis/src/maths.js","node_modules/@studio-freight/lenis/src/animate.js","node_modules/@studio-freight/lenis/src/dimensions.js","node_modules/@studio-freight/lenis/src/debounce.js","node_modules/@studio-freight/lenis/src/emitter.js","node_modules/@studio-freight/lenis/src/virtual-scroll.js","node_modules/@studio-freight/lenis/src/index.js","node_modules/@barba/core/dist/barba.umd.js","node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js","node_modules/@barba/core/src/modules/Logger.ts","node_modules/@barba/core/src/defs/hooks.ts","node_modules/node_modules/path-to-regexp/index.js","node_modules/@barba/core/src/schemas/attribute.ts","node_modules/@barba/core/src/utils/dom.ts","node_modules/@barba/core/src/utils/history.ts","node_modules/@barba/core/src/utils/helpers.ts","node_modules/@barba/core/src/utils/url.ts","node_modules/@barba/core/src/utils/request.ts","node_modules/node_modules/is-promise/index.js","node_modules/@barba/core/src/utils/run-async.ts","node_modules/@barba/core/src/hooks.ts","node_modules/@barba/core/src/modules/Ignore.ts","node_modules/@barba/core/src/modules/Cache.ts","node_modules/@barba/core/src/modules/Prevent.ts","node_modules/@barba/core/src/modules/Error.ts","node_modules/@barba/core/src/modules/Store.ts","node_modules/@barba/core/src/modules/Transitions.ts","node_modules/@barba/core/src/modules/Views.ts","node_modules/@barba/core/src/polyfills/index.ts","node_modules/@barba/core/src/schemas/page.ts","node_modules/@barba/core/src/core.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"63a061720d5d0b16\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import Lenis from '@studio-freight/lenis';\r\nimport barba from '@barba/core';\r\nimport gsap from 'gsap';\r\nimport { ScrollToPlugin } from 'gsap/all';\r\nimport { init, navButtons, projectsAnim, scrollAnim } from './app';\r\ngsap.registerPlugin(ScrollToPlugin);\r\n\r\n// Lenis\r\nconst lenis = new Lenis({\r\n  lerp: 0.05,\r\n});\r\n\r\nfunction raf(time) {\r\n  lenis.raf(time);\r\n  requestAnimationFrame(raf);\r\n}\r\n\r\nrequestAnimationFrame(raf);\r\n\r\n// Barba\r\nfunction delay(n = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, n);\r\n  });\r\n}\r\n\r\nfunction pageTransition() {\r\n  const tl = gsap.timeline({\r\n    defaults: {\r\n      ease: 'power4.inOut',\r\n    },\r\n  });\r\n  tl.to('.curtain', {\r\n    scaleY: 1,\r\n    duration: 0.5,\r\n    transformOrigin: 'bottom',\r\n    stagger: 0.1,\r\n  }).to('.curtain', {\r\n    scaleY: 0,\r\n    duration: 0.5,\r\n    transformOrigin: 'top',\r\n    stagger: 0.1,\r\n    delay: 0.2,\r\n  });\r\n}\r\n\r\nfunction contentAnimation() {}\r\n\r\nbarba.init({\r\n  sync: true,\r\n  transitions: [\r\n    {\r\n      async leave(data) {\r\n        lenis.stop();\r\n        const done = this.async();\r\n        pageTransition();\r\n        await delay(1000);\r\n        done();\r\n      },\r\n      async enter(data) {\r\n        lenis.start();\r\n        contentAnimation();\r\n        if (data.next.namespace === 'home') init();\r\n      },\r\n      async once(data) {\r\n        contentAnimation();\r\n      },\r\n    },\r\n  ],\r\n});\r\n\r\nbarba.hooks.enter((data) => {\r\n  if (data.next.namespace === 'home') return;\r\n  window.scrollTo(0, 0);\r\n});\r\n\r\nbarba.hooks.afterEnter((data) => {\r\n  if (data.next.namespace === 'home') {\r\n    navButtons();\r\n    projectsAnim();\r\n    window.addEventListener('scroll', scrollAnim);\r\n  } else {\r\n    window.removeEventListener('scroll', scrollAnim);\r\n  }\r\n});\r\n",null,"// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programmatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget] // deprecated\r\n   * @property {Window | HTMLElement} [eventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [__iosNoInertiaSyncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      __iosNoInertiaSyncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClass('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClass('lenis', false)\r\n    this.toggleClass('lenis-smooth', false)\r\n    this.toggleClass('lenis-scrolling', false)\r\n    this.toggleClass('lenis-stopped', false)\r\n    this.toggleClass('lenis-locked', false)\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'both' &&\r\n        deltaX === 0 &&\r\n        deltaY === 0) || // \"touchend\" events prevents \"click\"\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          node.classList?.contains('lenis') // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia\r\n          ? this.syncTouchLerp\r\n          : this.options.__iosNoInertiaSyncTouchLerp,\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value, completed) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClass('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClass('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClass('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  set isLocked(value) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClass('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  toggleClass(name, value) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n",null,"// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n","/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.match = match\nmodule.exports.regexpToFunction = regexpToFunction\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match (str, options) {\n  var keys = []\n  var re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction (re, keys) {\n  return function (pathname, options) {\n    var m = re.exec(pathname)\n    if (!m) return false\n\n    var path = m[0]\n    var index = m.index\n    var params = {}\n    var decode = (options && options.decode) || decodeURIComponent\n\n    for (var i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue\n\n      var key = keys[i - 1]\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(function (value) {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path: path, index: index, params: params }\n  }\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n","/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser = new DOMParser();\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container before next sibling or at the end of the wrapper.\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const existingContainer = this.getContainer();\n\n    if (existingContainer) {\n      this._insertAfter(container, existingContainer);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n","import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n    const index = 0;\n\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const index = this.size;\n    const action = this._getAction(trigger);\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    switch (action) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number) {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the last state (top of the history stack).\n   */\n  get state(): IStateItem {\n    return this._states[this._states.length - 1];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n","/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport ptr from 'path-to-regexp';\n// Definitions\nimport { ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<string | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const html = await page;\n    const { next } = data;\n\n    if (html) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.html = html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n","/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\n// export const getQuery = (url: string): IGenericObject => parse(url).query;\n\n/**\n * Get hash from URL.\n */\n// export const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n","/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { RequestError } from '../defs';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const res = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n          requestError(url, res);\n          reject(res);\n        }\n      }\n    };\n    xhr.ontimeout = () => {\n      const err = new Error(`Timeout error [${ttl}]`);\n      requestError(url, err);\n      reject(err);\n    };\n    xhr.onerror = () => {\n      const err = new Error(`Fetch error`);\n      requestError(url, err);\n      reject(err);\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n    xhr.send();\n  });\n}\n\nexport { request };\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n","/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((value, key) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n","/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n","/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n    });\n\n    return {\n      action,\n      request,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n","/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n","/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n","/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<string | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(error, 'Transition error [sync]');\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current contaienr\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n","/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n","// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n","/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n","/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: Array<IBarbaPlugin<any>> = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n    this._wrapper.setAttribute('aria-live', 'polite'); // A11y\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Use \"current\" data\n    // Init history\n    this.history.init(current.url.href, current.namespace);\n    // Add to cache\n    // TODO: do not cache renderer HTML, only request results…\n    // this.cache.set(current.url.href, Promise.resolve(current.html), 'init');\n\n    // 6. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 7. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 8. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n\n    const page = this.cache.has(href)\n      ? this.cache.update(href, { action: 'click' }).request\n      : this.cache.set(\n          href,\n          this.request(\n            href,\n            this.timeout,\n            this.onRequestError.bind(this, trigger)\n          ),\n          'click'\n        ).request;\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.current.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba')\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.dom.getHref(link);\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link)\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n"],"names":["clamp","min","input","max","Math","Animate","_proto","prototype","advance","deltaTime","_this$onUpdate","x","y","t","this","isRunning","completed","lerp","value","to","exp","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","_ref","_ref$lerp","_ref$duration","_ref$easing","onStart","Dimensions","_temp","_this","callback","timer","wrapper","content","_ref$autoResize","autoResize","resize","onWrapperResize","onContentResize","window","width","innerWidth","height","innerHeight","clientWidth","clientHeight","scrollHeight","scrollWidth","args","arguments","context","clearTimeout","setTimeout","apply","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","disconnect","_createClass","key","get","Emitter","events","emit","event","callbacks","i","length","slice","on","cb","_this$events$event","push","_this$events$event2","filter","off","_this$events$event3","VirtualScroll","element","_ref$wheelMultiplier","wheelMultiplier","_ref$touchMultiplier","touchMultiplier","_ref$normalizeWheel","normalizeWheel","onTouchStart","_ref2","targetTouches","clientY","touchStart","clientX","lastDelta","onTouchMove","_ref3","deltaX","deltaY","emitter","onTouchEnd","onWheel","addEventListener","passive","removeEventListener","Lenis","_ref$wrapper","_ref$content","document","documentElement","_ref$wheelEventsTarge","wheelEventsTarget","_ref$eventsTarget","eventsTarget","_ref$smoothWheel","smoothWheel","_ref$smoothTouch","smoothTouch","_ref$syncTouch","syncTouch","_ref$syncTouchLerp","syncTouchLerp","_ref$__iosNoInertiaSy","__iosNoInertiaSyncTouchLerp","_ref$touchInertiaMult","touchInertiaMultiplier","pow","_ref$infinite","infinite","_ref$orientation","orientation","_ref$gestureOrientati","gestureOrientation","onVirtualScroll","ctrlKey","isTouch","type","includes","isWheel","options","scroll","composedPath","indexOf","rootElement","find","node","_node$classList","hasAttribute","classList","contains","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","hasTouchInertia","velocity","scrollTo","targetScroll","_extends","programmatic","onNativeScroll","__preventNextScrollEvent","lastScroll","animatedScroll","actualScroll","direction","sign","lenisVersion","body","dimensions","toggleClass","virtualScroll","setScroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","_temp2","_this2","_ref3$offset","offset","_ref3$immediate","immediate","_ref3$lock","lock","_ref3$duration","_ref3$easing","_ref3$lerp","_ref3$onComplete","onComplete","_ref3$force","force","_ref3$programmatic","limit","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","requestAnimationFrame","name","toggle","d","__isSmooth","set","__isScrolling","__isStopped","__isLocked","className","_catch","recover","result","e","then","Symbol","iterator","asyncIterator","LogLevels","HookMethods","_level","Logger","source","_source","getLevel","setLevel","error","objects","_log","console","warn","warning","info","debug","log","fn","level","concat","pathToRegexp","regexpToFunction","parse","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","PATH_REGEXP","RegExp","join","str","res","tokens","index","path","defaultDelimiter","delimiter","whitelist","undefined","pathEscaped","exec","m","escaped","prev","capture","group","modifier","k","c","pattern","prefix","optional","repeat","escapeGroup","escapeString","substr","re","keys","pathname","params","decode","decodeURIComponent","split","map","matches","Array","flags","data","encode","encodeURIComponent","validate","token","segment","isArray","TypeError","j","test","String","replace","sensitive","strict","end","endsWith","route","endToken","isEndDelimited","groups","match","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","schemaAttribute","container","history","namespace","prevent","dom","DOMParser","toString","el","outerHTML","toDocument","htmlString","_parser","parseFromString","toElement","div","createElement","innerHTML","getHtml","doc","getWrapper","scope","_attr","getContainer","removeContainer","parentNode","removeChild","addContainer","existingContainer","_insertAfter","appendChild","getNamespace","ns","getAttribute","getHref","tagName","toLowerCase","href","resolveUrl","baseVal","urls","numUrls","Error","base","head","getElementsByTagName","insertBefore","firstChild","resolved","a","newNode","referenceNode","nextSibling","init","url","_session","state","scrollX","scrollY","_states","_pointer","item","states","replaceState","change","trigger","_getDirection","add","size","action","_getAction","pushState","update","remove","splice","pop","clear","newStates","attr","diff","page","next","html","nextDocument","title","ptr","Promise","resolve","getOrigin","location","origin","getPort","port","portString","substring","parseInt","hash","query","hashIndex","queryIndex","parseQuery","reduce","acc","clean","request","ttl","requestError","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","responseText","statusText","ontimeout","err","onerror","open","timeout","setRequestHeader","send","obj","runAsync","func","ctx","async","promise","answer","isPromise","hooks","Map","registered","all","forEach","hook","has","Set","chain","_this3","logger","_this4","help","Ignore","ignore","_ignoreAll","paths","_ignoreRegexes","p","checkHref","some","regex","Cache","_state","getRequest","getAction","exists","newTab","which","metaKey","shiftKey","altKey","blank","corsDomain","protocol","hostname","corsPort","download","preventSelf","preventAll","Boolean","closest","sameUrl","Prevent","check","suite","tests","run","checkLink","BarbaError","label","captureStackTrace","Store","transitions","_rules","position","filters","once","self","matching","active","valid","reverse","rule","_check","activeMatch","transitionType","infos","Object","_addPriority","sort","b","priority","leave","enter","transition","isValid","hasMatch","strRule","objRule","fnName","current","names","_calculatePriority","ruleName","ruleIndex","Transitions","store","doOnce","_running","_doAsyncHook","doPage","sync","_isTransitionError","leaveResult","helpers","values","message","Views","views","view","byNamespace","_createHook","Element","msMatchesSelector","webkitMatchesSelector","s","parentElement","schemaPage","version","use","plugin","installedPlugins","plugins","install","schema","cacheIgnore","prefetchIgnore","preventRunning","preventCustom","logLevel","_requestCustomError","_wrapper","setAttribute","_resetData","cache","_onLinkEnter","bind","_onLinkClick","_onStateChange","_bind","onceData","_unbind","assign","go","getPath","hasSelf","stopPropagation","readyData","hasOnce","onRequestError","shouldWait","response","prefetch","_this5","link","_getLinkElement","_this6","_data"],"version":3,"file":"index.0d5d0b16.js.map","sourceRoot":"/__parcel_source_root/"}